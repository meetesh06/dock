{"version":3,"sources":["CampusStoryLogo.svg","screens/CreateChannel.js","screens/ManageChannel.js","screens/HomeAdmin.js"],"names":["module","exports","__webpack_require__","p","HomeAdmin","handleChange","e","_ref","value","_this","setState","state","categories","privateChannel","officialChannel","error","success","loading","messages","name","category","description","creatorName","creatorEmail","creatorPassword","fileName","submitForm","file","document","getElementById","files","length","push","test","String","toLowerCase","undefined","formData","FormData","append","axios","post","headers","Content-Type","x-access-token","props","auth","user_token","then","result","data","catch","err","console","log","finally","mounted","window","scrollTo","_this2","this","_this3","react_default","a","createElement","Grid","stackable","columns","Row","Column","Segment","Message","Header","List","map","index","Item","key","Form","Group","widths","Input","onChange","event","fluid","label","placeholder","TextArea","Checkbox","checked","Dropdown","options","id","type","Label","as","style","backgroundColor","marginBottom","htmlFor","Button","icon","basic","content","labelPosition","accept","hidden","multiple","display","justifyContent","onClick","React","Component","connect","ManageChannel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","channelList","currentSelected","updateCurrent","creator_password","_id","bind","assertThisInitialized","divided","relaxed","maxHeight","overflow","Icon","size","verticalAlign","Content","college","Description","width","Image","margin","objectFit","src","media","disabled","private","priority","creator","creator_email","visible","handleShowClick","handleSidebarHide","history","flex","alignItems","padding","marginTop","require","logout","animated","Sidebar","Pushable","Menu","animation","inverted","onHide","vertical","Pusher","dimmed","minHeight","flexFlow","Switch","Route","exact","path","component","RequireAuth","CreateChannel","dispatch","payload"],"mappings":"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","file":"static/js/4.1d3c3a83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CampusStoryLogo.fea71e00.svg\";","import React from 'react';\nimport { Form, Grid, Label, Button, Message, Segment } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass HomeAdmin extends React.Component {\n    handleChange = (e, { value }) => this.setState({ value })\n    state = {\n        categories: [\n            // { value: 'all', text: 'All' },\n            // { value: 'articles', text: 'Articles' },\n            // { value: 'products', text: 'Products' },\n        ],\n        privateChannel: false,\n        officialChannel: false,\n        error: false,\n        success: false,\n        loading: false,\n        messages: [],\n        name: '',\n        category: '',\n        description: '',\n        creatorName: '',\n        creatorEmail: '',\n        creatorPassword: '',\n        fileName: ''\n    }\n\n    componentDidMount() {\n        let formData = new FormData();\n        this.setState({ loading: true });\n        axios.post(\"/admin/get-categories\", formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'x-access-token': this.props.auth.user_token\n            }\n          })\n          .then( (result) => {\n            result = result.data;\n            // console.log(result);\n            if(!result.error) {\n                this.setState({ loading: false, categories: result.data });\n            } else {\n                this.setState({ loading: false, messages: [\"Error with network, please reload\"], error: true });\n            }\n          })\n          .catch( (err) => console.log(err) )\n          .finally( () => {\n            if(this.mounted)\n                this.setState({ loading: false });\n          } )\n    }\n\n    submitForm = () => {\n        if(this.state.loading === true) return;\n        let error = false;\n        let messages = [];\n        let file = document.getElementById('upload').files[0];\n        let creatorEmail = document.getElementById('creator-email');\n        let re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        this.setState({ loading: true });\n        if(this.state.name.length < 3) {\n            error = true;\n            messages.push(\"The channel name is less than 3 characters\");\n        }\n        \n        if(this.state.name.length > 140) {\n            error = true;\n            messages.push(\"The channel name is more than 140 characters\");\n        }\n        \n        if(this.state.description.length < 10) {\n            error = true;\n            messages.push(\"The channel description is less than 10 characters\");\n        }\n        if(this.state.description.length > 140) {\n            error = true;\n            messages.push(\"The channel description is more than 140 characters\");\n        }\n        \n        if(this.state.category === '') {\n            error = true;\n            messages.push(\"No category selected\");\n        }\n\n        if(this.state.creatorName.length < 3) {\n            error = true;\n            messages.push(\"The creator name is less than 3 characters\");\n        }\n        \n        if(this.state.creatorName.length > 140) {\n            error = true;\n            messages.push(\"The creator name is more than 140 characters\");\n        }\n\n        if(this.state.creatorPassword.length < 3) {\n            error = true;\n            messages.push(\"The creator password is less than 3 characters\");\n        }\n        \n        if(this.state.creatorPassword.length > 140) {\n            error = true;\n            messages.push(\"The creator password is more than 140 characters\");\n        }\n        \n        \n        if(!re.test(String(creatorEmail.value).toLowerCase())) {\n            error = true;\n            messages.push(\"Invalid Email entry\");\n        }\n        \n        if(file === undefined) {\n            error = true;\n            messages.push(\"No file selected\");\n        }\n        \n        if(error === false) {\n            const formData = new FormData();\n            formData.append(\"name\", this.state.name);\n            formData.append(\"description\", this.state.description);\n            formData.append(\"private\", this.state.privateChannel);\n            formData.append(\"official\", this.state.officialChannel);\n            formData.append(\"category\", this.state.category);\n            formData.append(\"creatorName\", this.state.creatorName);\n            formData.append(\"creatorEmail\", this.state.creatorEmail);\n            formData.append(\"creatorPassword\", this.state.creatorPassword);\n            formData.append(\"poster\", file);\n            \n            axios.post(\"/admin/create-channel\", formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data',\n                  'x-access-token': this.props.auth.user_token\n                } \n              })\n              .then( (result) => {\n                result = result.data;\n                // console.log(result);\n                if(!result.error) {\n                    this.setState({ \n                        loading: false, \n                        messages: [\"Channel \" + this.state.name +\" successfully created\"], \n                        error: false, \n                        success: true,\n                        name: '',\n                        description: '',\n                        privateChannel: '',\n                        officialChannel: '',\n                        category: '',\n                        creatorName: '',\n                        creatorEmail: '',\n                        creatorPassword: '',\n                    });\n                } else {\n                    this.setState({ loading: false, messages: [\"Error creating the channel\"], error: true });\n                }\n              })\n              .catch( (err) => console.log(err) )\n              .finally( () => {\n                if(this.mounted)\n                    this.setState({ loading: false });\n                    window.scrollTo(0, 0);\n              } )\n        } else {\n            this.setState({ messages, error, loading: false })\n        }\n    }\n\n    render() {\n        return(\n            <Grid stackable columns={3}>\n                <Grid.Row>\n                <Grid.Column>\n                </Grid.Column>\n                <Grid.Column>\n                <Segment>\n                    {\n                        this.state.error &&\n                        <Message success={true}>\n                            <Message.Header>Opps, there were a few problems</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    {\n                        this.state.success &&\n                        <Message>\n                            <Message.Header>Success Creating a new channel</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    <Form>\n                        <Form.Group widths='equal'>\n                            <Form.Input value={this.state.name} onChange={ (event, value) => this.setState({ name: value.value }) } fluid label='Channel Name' placeholder='Channel Name' />\n                        </Form.Group>\n                        \n                        <Form.TextArea value={this.state.description} onChange={ (event, value) => this.setState({ description: value.value }) } label='Description' placeholder='What will this channel be about...' />\n                        <Form.Checkbox label='Make this channel private?' checked={this.state.privateChannel} onChange={ (event, data) => this.setState({ privateChannel: !this.state.privateChannel }) }/>\n                        <Form.Checkbox label='Official Channel?' checked={this.state.officialChannel} onChange={ (event, data) => this.setState({ officialChannel: !this.state.officialChannel }) }/>\n                        <Form.Dropdown value={this.state.category} onChange={(event, value) => this.setState({ category: value.value }) } label='Category' options={this.state.categories} placeholder='Select a category'/>\n                        <Form.Group widths='equal'>\n                            <Form.Input value={this.state.creatorName} onChange={ (event, value) => this.setState({ creatorName: value.value }) } fluid label='Creator Name' placeholder='Creator Name' />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Input id=\"creator-email\" value={this.state.creatorEmail} type=\"email\" onChange={ (event, value) => this.setState({ creatorEmail: value.value }) } fluid label='Email' placeholder='Email' />\n                            <Form.Input value={this.state.creatorPassword} type=\"text\" onChange={ (event, value) => this.setState({ creatorPassword: value.value }) } fluid label='Password' placeholder='Password' />\n                        </Form.Group>\n\n                        <Label\n                            as=\"label\"\n                            // basic\n                            style={{ backgroundColor: '#fff', marginBottom: 10 }}\n                            htmlFor=\"upload\"\n                        >\n                            <Button\n                                icon=\"upload\"\n                                label={{\n                                    basic: true,\n                                    content: 'Select a banner for the channel'\n                                }}\n                                labelPosition=\"right\"\n                            />\n                            <p>{this.state.fileName}</p>\n                            <input\n                                accept='image/*'\n                                hidden\n                                onChange={() => {\n                                    let file = document.getElementById('upload').files[0];\n                                    return this.setState({ fileName: file.name === undefined ? \"\" : file.name })\n                                }}\n                                id=\"upload\"\n                                multiple\n                                type=\"file\"\n                            />\n                        </Label>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Form.Button loading={this.state.loading} onClick={this.submitForm}>Submit</Form.Button>\n                        </div>\n                    </Form>\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            \n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { \n      auth: state.auth\n    };\n};\n\n  \nexport default connect(mapStateToProps)(HomeAdmin);\n","import React from 'react';\nimport {  Grid, List, Segment, Form, Message, Label, Button, Image } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass ManageChannel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateCurrent = this.updateCurrent.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n    state = {\n        channelList: [],\n        currentSelected: {},\n        name: '',\n        description: '',\n        creatorPassword: '',\n        fileName: ''\n    }\n\n    updateCurrent = (value) => {\n        // console.log(value);\n        this.setState({ \n            currentSelected: value, \n            name: value.name,\n            description: value.description,\n            creatorPassword: value.creator_password\n        })\n    }\n\n    componentDidMount() {\n        let formData = new FormData();\n        this.setState({ loading: true });\n        axios.post(\"/admin/get-channel-list\", formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'x-access-token': this.props.auth.user_token\n            }\n          })\n          .then( (result) => {\n            result = result.data;\n            // console.log(result);\n            if(!result.error) {\n                this.setState({ loading: false, channelList: result.data });\n            } else {\n                this.setState({ loading: false, messages: [\"Error with network, please reload\"], error: true });\n            }\n          })\n          .catch( (err) => console.log(err) )\n          .finally( () => {\n            if(this.mounted)\n                this.setState({ loading: false });\n          } )\n    }\n\n    submitForm = () => {\n        let error = false;\n        let messages = [];\n        let file = document.getElementById('upload').files[0];\n        this.setState({ loading: true });\n        if(this.state.name.length < 3) {\n            error = true;\n            messages.push(\"The channel name is less than 3 characters\");\n        }\n        \n        if(this.state.name.length > 140) {\n            error = true;\n            messages.push(\"The channel name is more than 140 characters\");\n        }\n        \n        if(this.state.description.length < 10) {\n            error = true;\n            messages.push(\"The channel description is less than 10 characters\");\n        }\n        if(this.state.description.length > 140) {\n            error = true;\n            messages.push(\"The channel description is more than 140 characters\");\n        }\n\n        if(this.state.creatorPassword.length < 3) {\n            error = true;\n            messages.push(\"The creator password is less than 3 characters\");\n        }\n        \n        if(this.state.creatorPassword.length > 140) {\n            error = true;\n            messages.push(\"The creator password is more than 140 characters\");\n        }\n        \n        \n        \n        \n        if(error === false) {\n            const formData = new FormData();\n            const _id = this.state.currentSelected._id;\n            const name = this.state.name;\n            const description = this.state.description;\n            const creatorPassword = this.state.creatorPassword;\n\n            formData.append(\"_id\", _id);\n            formData.append(\"name\", name);\n            formData.append(\"description\", description);\n            formData.append(\"creatorPassword\", creatorPassword);\n            \n            if(file !== undefined) {\n                formData.append(\"poster\", file);\n            }\n            \n            axios.post(\"/admin/update-channel\", formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data',\n                  'x-access-token': this.props.auth.user_token\n                } \n              })\n              .then( (result) => {\n                result = result.data;\n                // console.log(result);\n                if(!result.error) {\n                    // const a = [ ...this.state.channelList ];\n                    // let index = a.findIndex(item => item._id === _id);\n                    // a[index].name = name;\n                    // a[index].description = description;\n                    // a[index].creator_password = creatorPassword;\n                    \n                    // console.log(index, a);\n                    \n                    // items[itemIndex]['name'] = name;\n                    // items[itemIndex]['description'] = description;\n                    // items[itemIndex]['creatorPassword'] = creatorPassword;\n                    \n                    this.setState({ \n                        messages: [\"Channel \" + this.state.name +\" update success\"], \n                        error: false,\n                        success: true\n                    });\n                    let formData = new FormData();\n                    axios.post(\"/admin/get-channel-list\", formData, {\n                        headers: {\n                        'Content-Type': 'multipart/form-data',\n                        'x-access-token': this.props.auth.user_token\n                        }\n                    })\n                    .then( (result) => {\n                        result = result.data;\n                        // console.log(result);\n                        if(!result.error) {\n                            this.setState({ loading: false, channelList: result.data });\n                        } else {\n                            this.setState({ loading: false, messages: [\"Error with network, please reload\"], error: true });\n                        }\n                    })\n                    .catch( (err) => console.log(err) )\n                    .finally( () => {\n                        if(this.mounted)\n                            this.setState({ loading: false });\n                    } )\n                } else {\n                    this.setState({ loading: false, messages: [\"Error updating the channel\"], error: true });\n                }\n              })\n              .catch( (err) => console.log(err) )\n              .finally( () => {\n                if(this.mounted)\n                    this.setState({ loading: false });\n                    window.scrollTo(0, 0);\n              } )\n        } else {\n            this.setState({ messages, error, loading: false })\n        }\n    }\n\n    render() {\n        return(\n            <Grid stackable columns='equal'>\n                <Grid.Column>\n                    <Segment>\n                        <List divided relaxed style={{ maxHeight: 400, overflow: 'scroll' }}>\n                            { this.state.channelList.map((value, index) =>\n                                <List.Item key={index}>\n                                    { this.state.currentSelected._id === value._id && <List.Icon name='angle double right' size='large' verticalAlign='middle' />}\n                                    <List.Content>\n                                        <List.Header onClick={ () => this.updateCurrent(value) } as='a'>{value.college}/{value.name}</List.Header>\n                                        <List.Description>{value.category}</List.Description>\n                                    </List.Content>\n                                </List.Item>\n                            )}\n                            \n                        </List>\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column width={12}>\n                    <Segment>\n                    {\n                        this.state.error &&\n                        <Message>\n                            <Message.Header>Opps, there were a few problems</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    {\n                        this.state.success &&\n                        <Message>\n                            <Message.Header>Success Creating a new channel</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    {/* <Image style={{ display: 'block', margin: 'auto', width: 50 }} src={\"https://mycampusdock.com/\" + this.state.currentSelected.media} size='small' /> */}\n                    <Image style={{ display: 'block', margin: 'auto', width: '100%', maxHeight: 250, objectFit: 'contain' }} src={\"https://mycampusdock.com/\" + (this.state.currentSelected.media && this.state.currentSelected.media[0])} size='big' />\n                    <Form>\n                        <Form.Group widths='equal'>\n                            <Form.Input value={this.state.name} onChange={ (event, value) => this.setState({ name: value.value }) } fluid label='Channel Name' placeholder='Channel Name' />\n                        </Form.Group>\n                        \n                        <Form.TextArea value={this.state.description} onChange={ (event, value) => this.setState({ description: value.value }) } label='Description' placeholder='What will this channel be about...' />\n                        <Form.Checkbox disabled={true} checked={this.state.currentSelected.private !== undefined ? this.state.currentSelected.private : false} label='Make this channel private?' />\n                        <Form.Checkbox disabled={true} checked={this.state.currentSelected.priority === 5 ? true : false} label='Official Channel?' />\n                        <Form.Dropdown disabled={true} value={this.state.currentSelected.category} placeholder='Select a category'/>\n                        <Form.Group widths='equal'>\n                            <Form.Input disabled={true} value={this.state.currentSelected.creator !== undefined ? this.state.currentSelected.creator : \"\"}  fluid label='Creator Name' placeholder='Creator Name' />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Input value={this.state.currentSelected.creator_email !== undefined ? this.state.currentSelected.creator_email : \"\"} id=\"creator-email\" disabled={true} fluid label='Email' placeholder='Email' />\n                            <Form.Input value={this.state.creatorPassword} type=\"text\" onChange={ (event, value) => this.setState({ creatorPassword: value.value }) } fluid label='Password' placeholder='Password' />\n                        </Form.Group>\n\n                        <Label\n                            as=\"label\"\n                            // basic\n                            style={{ backgroundColor: '#fff', marginBottom: 10 }}\n                            htmlFor=\"upload\"\n                        >\n                            <Button\n                                icon=\"upload\"\n                                label={{\n                                    basic: true,\n                                    content: 'Select a banner for the channel'\n                                }}\n                                labelPosition=\"right\"\n                            />\n                            <p>{this.state.fileName}</p>\n                            <input\n                                accept='image/*'\n                                hidden\n                                onChange={() => {\n                                    let file = document.getElementById('upload').files[0];\n                                    return this.setState({ fileName: file.name === undefined ? \"\" : file.name })\n                                }}\n                                id=\"upload\"\n                                multiple\n                                type=\"file\"\n                            />\n                        </Label>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Form.Button loading={this.state.loading} disabled={this.state.currentSelected === {} } onClick={this.submitForm}>Submit</Form.Button>\n                        </div>\n                    </Form>\n                    </Segment>\n                </Grid.Column>\n            </Grid>\n            \n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return { \n      auth: state.auth\n    };\n};\n\n  \nexport default connect(mapStateToProps)(ManageChannel);\n","import React, { Component } from 'react'\nimport { Button, Icon, Menu, Segment, Sidebar, Label, Image } from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport RequireAuth from '../components/require_auth';\nimport CreateChannel from './CreateChannel';\nimport ManageChannel from './ManageChannel';\n\nclass HomeAdmin extends Component {\n  state = { visible: false }\n\n  handleShowClick = () => this.setState({ visible: !this.state.visible })\n  handleSidebarHide = () => this.setState({ visible: false })\n\n  render() {\n    const { visible } = this.state\n    const { history } = this.props;\n    return (\n      <div style={{ flex: 1 }}>\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 10 }}>\n            <Button onClick={this.handleShowClick} icon>\n                <Icon name=\"sidebar\" />\n            </Button>\n            {/* <Button  onClick={this.handleShowClick} icon>\n                <Icon name=\"sidebar\" />\n            </Button> */}\n            <div style={{ flex: 1, marginTop: 10  }}>\n              <Image style={{ display: 'block', margin: 'auto', width: 50 }} src={require('../CampusStoryLogo.svg')} size='small' />\n            </div>     \n            <Button onClick={ () =>  this.props.logout()} animated>\n                <Button.Content visible>logout</Button.Content>\n                <Button.Content hidden>\n                <Icon name=\"close\" />\n                </Button.Content>\n            </Button>\n\n        </div>\n        \n\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            icon='labeled'\n            inverted\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={visible}\n            width='thin'\n          >\n            <Menu.Item as='a' onClick={() => history.push('/admin/create-channel')} >\n              <Icon name='plus square outline' />\n              Create Channel\n            </Menu.Item>\n            <Menu.Item as='b' onClick={() => history.push('/admin/manage-channel')} >\n              <Icon name='edit outline' />\n              Manage Channels\n            </Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher dimmed={visible}>\n            <Segment basic style={{minHeight: '100vh', display: 'flex', flexFlow: 'column nowrap'}}>\n                <Switch>\n                    <Route exact path=\"/admin/create-channel\" component={RequireAuth(CreateChannel)} />\n                    <Route exact path=\"/admin/manage-channel\" component={RequireAuth(ManageChannel)} />\n                </Switch>\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return { \n      auth: state.auth\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      logout: (payload) => {\n        dispatch({ type: 'UNAUTH_USER', payload });\n      }\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(HomeAdmin);"],"sourceRoot":""}