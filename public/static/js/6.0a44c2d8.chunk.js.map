{"version":3,"sources":["screens/CreateChannel.js","screens/ManageChannel.js","screens/SetTrending.js","screens/EmailActions.js","screens/HomeAdmin.js","CampusStoryLogo.svg"],"names":["HomeAdmin","handleChange","e","_ref","value","_this","setState","state","categories","privateChannel","officialChannel","error","success","loading","messages","name","category","description","creatorName","creatorEmail","creatorPassword","fileName","submitForm","file","document","getElementById","files","length","push","test","String","toLowerCase","undefined","formData","FormData","append","axios","post","headers","Content-Type","x-access-token","props","auth","user_token","then","result","data","mssg","catch","err","console","log","finally","mounted","window","scrollTo","_this2","this","_this3","react_default","a","createElement","Grid","stackable","columns","Row","Column","Segment","Message","Header","List","map","index","Item","key","Form","Group","widths","Input","onChange","event","fluid","label","placeholder","TextArea","Checkbox","checked","Dropdown","search","options","id","type","Label","as","style","backgroundColor","marginBottom","htmlFor","Button","icon","basic","content","labelPosition","accept","hidden","multiple","display","justifyContent","onClick","React","Component","connect","ManageChannel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","channelList","currentSelected","updateCurrent","updateList","_id","bind","assertThisInitialized","divided","relaxed","maxHeight","overflow","Icon","size","verticalAlign","Content","college","Description","width","Image","borderRadius","margin","objectFit","src","media","disabled","private","priority","creator","creator_email","SetTrending","eventList","trending","title","date","Date","validity","result1","JSON","stringify","that","addEventListener","input","dateEntered","setHours","getFullYear","getMonth","getDate","max","min","stateOptions","text","EmailActions","selected","email","name1","message","name_1","name_2","alert","submitFormMessage","textAlign","padding","selection","val","val1","visible","handleShowClick","handleSidebarHide","history","flex","alignItems","marginTop","require","logout","animated","Sidebar","Pushable","Menu","animation","inverted","onHide","vertical","Pusher","dimmed","minHeight","flexFlow","Switch","Route","exact","path","component","RequireAuth","CreateChannel","dispatch","payload","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/6.0a44c2d8.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Grid, Label, Button, Message, Segment } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass HomeAdmin extends React.Component {\n    handleChange = (e, { value }) => this.setState({ value })\n    state = {\n        categories: [\n            // { value: 'all', text: 'All' },\n            // { value: 'articles', text: 'Articles' },\n            // { value: 'products', text: 'Products' },\n        ],\n        privateChannel: false,\n        officialChannel: false,\n        error: false,\n        success: false,\n        loading: false,\n        messages: [],\n        name: '',\n        category: '',\n        description: '',\n        creatorName: '',\n        creatorEmail: '',\n        creatorPassword: '',\n        fileName: ''\n    }\n\n    componentDidMount() {\n        let formData = new FormData();\n        this.setState({ loading: true });\n        axios.post(\"/admin/get-categories\", formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'x-access-token': this.props.auth.user_token\n            }\n          })\n          .then( (result) => {\n            result = result.data;\n            // console.log(result);\n            if(!result.error) {\n                this.setState({ loading: false, categories: result.data });\n            } else {\n                this.setState({ loading: false, messages: [\"Error with network, please reload\"], error: true });\n            }\n          })\n          .catch( (err) => console.log(err) )\n          .finally( () => {\n            if(this.mounted)\n                this.setState({ loading: false });\n          } )\n    }\n\n    submitForm = () => {\n        if(this.state.loading === true) return;\n        let error = false;\n        let messages = [];\n        let file = document.getElementById('upload').files[0];\n        let creatorEmail = document.getElementById('creator-email');\n        let re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        this.setState({ loading: true, messages: [] });\n        if(this.state.name.length < 3) {\n            error = true;\n            messages.push(\"The channel name is less than 3 characters\");\n        }\n        \n        if(this.state.name.length > 2000) {\n            error = true;\n            messages.push(\"The channel name is more than 2000 characters\");\n        }\n        \n        if(this.state.description.length < 10) {\n            error = true;\n            messages.push(\"The channel description is less than 10 characters\");\n        }\n        if(this.state.description.length > 2000) {\n            error = true;\n            messages.push(\"The channel description is more than 2000 characters\");\n        }\n        \n        if(this.state.category === '') {\n            error = true;\n            messages.push(\"No category selected\");\n        }\n\n        if(this.state.creatorName.length < 3) {\n            error = true;\n            messages.push(\"The creator name is less than 3 characters\");\n        }\n        \n        if(this.state.creatorName.length > 140) {\n            error = true;\n            messages.push(\"The creator name is more than 140 characters\");\n        }\n\n        if(this.state.creatorPassword.length < 3) {\n            error = true;\n            messages.push(\"The creator password is less than 3 characters\");\n        }\n        \n        if(this.state.creatorPassword.length > 140) {\n            error = true;\n            messages.push(\"The creator password is more than 140 characters\");\n        }\n        \n        \n        if(!re.test(String(creatorEmail.value).toLowerCase())) {\n            error = true;\n            messages.push(\"Invalid Email entry\");\n        }\n        \n        if(file === undefined) {\n            error = true;\n            messages.push(\"No file selected\");\n        }\n        \n        if(error === false) {\n            const formData = new FormData();\n            formData.append(\"name\", this.state.name);\n            formData.append(\"description\", this.state.description);\n            formData.append(\"private\", this.state.privateChannel);\n            formData.append(\"official\", this.state.officialChannel);\n            formData.append(\"category\", this.state.category);\n            formData.append(\"creatorName\", this.state.creatorName);\n            formData.append(\"creatorEmail\", this.state.creatorEmail);\n            formData.append(\"creatorPassword\", this.state.creatorPassword);\n            formData.append(\"poster\", file);\n            \n            axios.post(\"/admin/create-channel\", formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data',\n                  'x-access-token': this.props.auth.user_token\n                } \n              })\n              .then( (result) => {\n                result = result.data;\n                // console.log(result);\n                if(!result.error) {\n                    this.setState({ \n                        loading: false, \n                        messages: [\"Channel \" + this.state.name +\" successfully created\"], \n                        error: false, \n                        success: true,\n                        name: '',\n                        description: '',\n                        privateChannel: false,\n                        officialChannel: false,\n                        category: '',\n                        creatorName: '',\n                        creatorEmail: '',\n                        creatorPassword: '',\n                    });\n                } else {\n                    this.setState({ loading: false, messages: [result.mssg], error: true });\n                }\n              })\n              .catch( (err) => console.log(err) )\n              .finally( () => {\n                if(this.mounted)\n                    this.setState({ loading: false });\n                    window.scrollTo(0, 0);\n              } )\n        } else {\n            this.setState({ messages, error, loading: false })\n        }\n    }\n\n    render() {\n        return(\n            <Grid stackable columns={3}>\n                <Grid.Row>\n                <Grid.Column>\n                </Grid.Column>\n                <Grid.Column>\n                <Segment>\n                    {\n                        this.state.error &&\n                        <Message success={true}>\n                            <Message.Header>Opps, there were a few problems</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    {\n                        this.state.success &&\n                        <Message>\n                            <Message.Header>Success Creating a new channel</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    <Form>\n                        <Form.Group widths='equal'>\n                            <Form.Input value={this.state.name} onChange={ (event, value) => this.setState({ name: value.value }) } fluid label='Channel Name' placeholder='Channel Name' />\n                        </Form.Group>\n                        \n                        <Form.TextArea value={this.state.description} onChange={ (event, value) => this.setState({ description: value.value }) } label='Description' placeholder='What will this channel be about...' />\n                        <Form.Checkbox label='Make this channel private?' checked={this.state.privateChannel} onChange={ (event, data) => this.setState({ privateChannel: !this.state.privateChannel }) }/>\n                        <Form.Checkbox label='Official Channel?' checked={this.state.officialChannel} onChange={ (event, data) => this.setState({ officialChannel: !this.state.officialChannel }) }/>\n                        {/* <Dropdown\n                            placeholder='State'\n                            search\n                            selection\n                            onChange={(val, val1) => this.setState({ selected: val1.value })}\n                            options={stateOptions}\n                        /> */}\n                        <Form.Dropdown search value={this.state.category} onChange={(event, value) => this.setState({ category: value.value }) } label='Category' options={this.state.categories} placeholder='Select a category'/>\n                        <Form.Group widths='equal'>\n                            <Form.Input value={this.state.creatorName} onChange={ (event, value) => this.setState({ creatorName: value.value }) } fluid label='Creator Name' placeholder='Creator Name' />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Input id=\"creator-email\" value={this.state.creatorEmail} type=\"email\" onChange={ (event, value) => this.setState({ creatorEmail: value.value }) } fluid label='Email' placeholder='Email' />\n                            <Form.Input value={this.state.creatorPassword} type=\"text\" onChange={ (event, value) => this.setState({ creatorPassword: value.value }) } fluid label='Password' placeholder='Password' />\n                        </Form.Group>\n\n                        <Label\n                            as=\"label\"\n                            // basic\n                            style={{ backgroundColor: '#fff', marginBottom: 10 }}\n                            htmlFor=\"upload\"\n                        >\n                            <Button\n                                icon=\"upload\"\n                                label={{\n                                    basic: true,\n                                    content: 'Select a banner for the channel(1000x750px)'\n                                }}\n                                labelPosition=\"right\"\n                            />\n                            <p>{this.state.fileName}</p>\n                            <input\n                                accept='image/*'\n                                hidden\n                                onChange={() => {\n                                    let file = document.getElementById('upload').files[0];\n                                    return this.setState({ fileName: file.name === undefined ? \"\" : file.name })\n                                }}\n                                id=\"upload\"\n                                multiple\n                                type=\"file\"\n                            />\n                        </Label>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Form.Button loading={this.state.loading} onClick={this.submitForm}>Submit</Form.Button>\n                        </div>\n                    </Form>\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            \n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { \n      auth: state.auth\n    };\n};\n\n  \nexport default connect(mapStateToProps)(HomeAdmin);\n","import React from 'react';\nimport {  Grid, List, Segment, Form, Message, Label, Button, Image } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass ManageChannel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateCurrent = this.updateCurrent.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n        this.updateList = this.updateList.bind(this);\n    }\n    state = {\n        channelList: [],\n        currentSelected: {},\n        name: '',\n        description: '',\n        creatorPassword: '',\n        fileName: ''\n    }\n\n    updateCurrent = (value) => {\n        // console.log(value);\n        this.setState({ \n            currentSelected: value, \n            name: value.name,\n            description: value.description\n        })\n    }\n\n    componentDidMount() {\n        this.updateList();\n    }\n\n    updateList = () => {\n        let formData = new FormData();\n        this.setState({ loading: true });\n        axios.post(\"/admin/get-channel-list\", formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'x-access-token': this.props.auth.user_token\n            }\n          })\n          .then( (result) => {\n            result = result.data;\n            // console.log(result);\n            if(!result.error) {\n                this.setState({ loading: false, channelList: result.data });\n            } else {\n                this.setState({ loading: false, messages: [\"Error with network, please reload\"], error: true });\n            }\n          })\n          .catch( (err) => console.log(err) )\n          .finally( () => {\n            if(this.mounted)\n                this.setState({ loading: false });\n          } )\n    }\n\n    submitForm = () => {\n        let error = false;\n        let messages = [];\n        let file = document.getElementById('upload').files[0];\n        this.setState({ loading: true });\n        if(this.state.name.length < 3) {\n            error = true;\n            messages.push(\"The channel name is less than 3 characters\");\n        }\n        \n        if(this.state.name.length > 2000) {\n            error = true;\n            messages.push(\"The channel name is more than 2000 characters\");\n        }\n        \n        if(this.state.description.length < 10) {\n            error = true;\n            messages.push(\"The channel description is less than 10 characters\");\n        }\n        if(this.state.description.length > 2000) {\n            error = true;\n            messages.push(\"The channel description is more than 2000 characters\");\n        }\n        \n        if(error === false) {\n            const formData = new FormData();\n            const _id = this.state.currentSelected._id;\n            const name = this.state.name;\n            const description = this.state.description;\n            const creatorPassword = this.state.creatorPassword;\n\n            formData.append(\"_id\", _id);\n            formData.append(\"name\", name);\n            formData.append(\"description\", description);\n            formData.append(\"creatorPassword\", creatorPassword);\n            \n            if(file !== undefined) {\n                formData.append(\"poster\", file);\n            }\n            \n            axios.post(\"/admin/update-channel\", formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data',\n                  'x-access-token': this.props.auth.user_token\n                } \n              })\n              .then( (result) => {\n                result = result.data;\n                // console.log(result);\n                if(!result.error) {\n                    // const a = [ ...this.state.channelList ];\n                    // let index = a.findIndex(item => item._id === _id);\n                    // a[index].name = name;\n                    // a[index].description = description;\n                    // a[index].creator_password = creatorPassword;\n                    \n                    // console.log(index, a);\n                    \n                    // items[itemIndex]['name'] = name;\n                    // items[itemIndex]['description'] = description;\n                    // items[itemIndex]['creatorPassword'] = creatorPassword;\n                    \n                    this.setState({ \n                        messages: [\"Channel \" + this.state.name +\" update success\"], \n                        error: false,\n                        success: true\n                    });\n                    let formData = new FormData();\n                    axios.post(\"/admin/get-channel-list\", formData, {\n                        headers: {\n                        'Content-Type': 'multipart/form-data',\n                        'x-access-token': this.props.auth.user_token\n                        }\n                    })\n                    .then( (result) => {\n                        result = result.data;\n                        // console.log(result);\n                        if(!result.error) {\n                            this.updateList();\n                            this.setState({ loading: false, channelList: result.data });\n                        } else {\n                            this.setState({ loading: false, messages: [\"Error with network, please reload\"], error: true });\n                        }\n                    })\n                    .catch( (err) => console.log(err) )\n                    .finally( () => {\n                        if(this.mounted)\n                            this.setState({ loading: false });\n                    } )\n                } else {\n                    this.setState({ loading: false, messages: [\"Error updating the channel\"], error: true });\n                }\n              })\n              .catch( (err) => console.log(err) )\n              .finally( () => {\n                if(this.mounted)\n                    this.setState({ loading: false });\n                    window.scrollTo(0, 0);\n              } )\n        } else {\n            this.setState({ messages, error, loading: false })\n        }\n    }\n\n    render() {\n        return(\n            <Grid stackable columns='equal'>\n                <Grid.Column>\n                    <Segment>\n                        <List divided relaxed style={{ maxHeight: 400, overflow: 'scroll' }}>\n                            { this.state.channelList.map((value, index) =>\n                                <List.Item key={index}>\n                                    { this.state.currentSelected._id === value._id && <List.Icon name='angle double right' size='large' verticalAlign='middle' />}\n                                    <List.Content>\n                                        <List.Header onClick={ () => this.updateCurrent(value) } as='a'>{value.college}/{value.name}</List.Header>\n                                        <List.Description>{value.category}</List.Description>\n                                    </List.Content>\n                                </List.Item>\n                            )}\n                            \n                        </List>\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column width={12}>\n                    <Segment>\n                    {\n                        this.state.error &&\n                        <Message>\n                            <Message.Header>Opps, there were a few problems</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    {\n                        this.state.success &&\n                        <Message>\n                            <Message.Header>Success Creating a new channel</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    {/* <Image style={{ display: 'block', margin: 'auto', width: 50 }} src={\"https://mycampusdock.com/\" + this.state.currentSelected.media} size='small' /> */}\n                    <Image style={{ borderRadius: 15, display: 'block', margin: 'auto', width: 333, maxHeight: 250, objectFit: 'contain' }} src={\"https://mycampusdock.com/\" + (this.state.currentSelected.media && this.state.currentSelected.media[0])} size='big' />\n                    <br></br>\n                    <Form>\n                        <Form.Group widths='equal'>\n                            <Form.Input value={this.state.name} onChange={ (event, value) => this.setState({ name: value.value }) } fluid label='Channel Name' placeholder='Channel Name' />\n                        </Form.Group>\n                        \n                        <Form.TextArea value={this.state.description} onChange={ (event, value) => this.setState({ description: value.value }) } label='Description' placeholder='What will this channel be about...' />\n                        <Form.Checkbox disabled={true} checked={this.state.currentSelected.private !== undefined ? this.state.currentSelected.private : false} label='Make this channel private?' />\n                        <Form.Checkbox disabled={true} checked={this.state.currentSelected.priority === 5 ? true : false} label='Official Channel?' />\n                        <Form.Dropdown disabled={true} value={this.state.currentSelected.category} placeholder='Select a category'/>\n                        <Form.Group widths='equal'>\n                            <Form.Input disabled={true} value={this.state.currentSelected.creator !== undefined ? this.state.currentSelected.creator : \"\"}  fluid label='Creator Name' placeholder='Creator Name' />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Input value={this.state.currentSelected.creator_email !== undefined ? this.state.currentSelected.creator_email : \"\"} id=\"creator-email\" disabled={true} fluid label='Email' placeholder='Email' />\n                            <Form.Input value={this.state.creatorPassword} type=\"text\" onChange={ (event, value) => this.setState({ creatorPassword: value.value }) } fluid label='Password' placeholder='Password' />\n                        </Form.Group>\n\n                        <Label\n                            as=\"label\"\n                            // basic\n                            style={{ backgroundColor: '#fff', marginBottom: 10 }}\n                            htmlFor=\"upload\"\n                        >\n                            <Button\n                                icon=\"upload\"\n                                label={{\n                                    basic: true,\n                                    content: 'Select a banner for the channel'\n                                }}\n                                labelPosition=\"right\"\n                            />\n                            <p>{this.state.fileName}</p>\n                            <input\n                                accept='image/*'\n                                hidden\n                                onChange={() => {\n                                    let file = document.getElementById('upload').files[0];\n                                    return this.setState({ fileName: file.name === undefined ? \"\" : file.name })\n                                }}\n                                id=\"upload\"\n                                multiple\n                                type=\"file\"\n                            />\n                        </Label>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Form.Button loading={this.state.loading} disabled={this.state.currentSelected === {} } onClick={this.submitForm}>Submit</Form.Button>\n                        </div>\n                    </Form>\n                    </Segment>\n                </Grid.Column>\n            </Grid>\n            \n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return { \n      auth: state.auth\n    };\n};\n\n  \nexport default connect(mapStateToProps)(ManageChannel);\n","import React from 'react';\nimport {  Grid, List, Segment, Form, Message, Label, Image } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass SetTrending extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateCurrent = this.updateCurrent.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n        this.updateList = this.updateList.bind(this);\n    }\n    state = {\n        eventList: [],\n        trending: [],\n        currentSelected: {},\n        title: '',\n        description: '',\n        date: new Date(),\n        validity: new Date(),\n        creatorPassword: '',\n        fileName: ''\n    }\n\n    updateCurrent = (value) => {\n        // console.log(value);\n        this.setState({ \n            currentSelected: value, \n            title: value.title,\n            description: value.description,\n            date: new Date(value.date)\n        })\n    }\n\n    componentDidMount() {\n        this.updateList();\n        const that = this;\n        document.getElementById(\"trending_date\").addEventListener(\"change\", function() {\n            var input = this.value;\n            var dateEntered = new Date(input);\n            console.log(input); //e.g. 2015-11-13\n            dateEntered.setHours(24,0,0,0);\n            that.setState({ validity: dateEntered });\n        });\n        \n    }\n\n    updateList = () => {\n        let formData = new FormData();\n        this.setState({ loading: true });\n        axios.post(\"/admin/get-event-list\", formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'x-access-token': this.props.auth.user_token\n            }\n          })\n          .then( (result) => {\n            result = result.data;\n            // console.log(result);\n            if(!result.error) {\n                this.setState({ eventList: result.data });\n                axios.post(\"/admin/get-trending\", formData, {\n                    headers: {\n                      'Content-Type': 'multipart/form-data',\n                      'x-access-token': this.props.auth.user_token\n                    }\n                  })\n                  .then( (result1) => {\n                      result1 = result1.data;\n                    //   console.log(result1)\n                    if(!result1.error) {\n                        this.setState({ loading: false, trending: result1.data });\n                    } else {\n                        this.setState({ loading: false, messages: [\"Error with network, please reload\"], error: true });\n                    }\n                  })\n                  .catch( (err) => {\n                    console.log(err)\n                  })\n                  .finally( () => {\n                    if(this.mounted)\n                        this.setState({ loading: false });\n                  });\n            } else {\n                this.setState({ loading: false, messages: [\"Error with network, please reload\"], error: true });\n            }\n          })\n          .catch( (err) => console.log(err) )\n          .finally( () => {\n            if(this.mounted)\n                this.setState({ loading: false });\n          } )\n    }\n\n    submitForm = () => {\n        this.setState({ loading: true });\n        if(this.state.currentSelected._id === undefined) return;\n        const formData = new FormData();\n        const _id = this.state.currentSelected._id;\n        \n        const validity = this.state.validity;\n\n        formData.append('_id', _id);\n        formData.append('validity', validity);\n\n        axios.post(\"/admin/add-to-trending\", formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                'x-access-token': this.props.auth.user_token\n            } \n            })\n            .then( (result) => {\n                this.setState({ loading: false });\n                result = result.data;\n                // console.log(result);\n                if(!result.error) {\n                    this.setState({ loading: false, messages: ['success'], error: false });\n                } else {\n                    this.setState({ loading: false, messages: [JSON.stringify(result.mssg)], error: true });\n                }\n                this.updateList();\n            })\n            .catch( (err) => console.log(err) )\n            .finally( () => this.setState({ loading: false }) );\n    }\n\n    render() {\n        return(\n            <Grid stackable columns='equal'>\n                <Grid.Column>\n                    <Segment>\n                        <Label>\n                            Event List\n                        </Label>\n                        <List divided relaxed style={{ maxHeight: 400, overflow: 'scroll' }}>\n                            { this.state.eventList.map((value, index) =>\n                                <List.Item key={index}>\n                                    { this.state.currentSelected._id === value._id && <List.Icon name='angle double right' size='large' verticalAlign='middle' />}\n                                    <List.Content>\n                                        <List.Header onClick={ () => this.updateCurrent(value) } as='a'>{value.college}/{value.title}</List.Header>\n                                        <List.Description>{value.category}</List.Description>\n                                    </List.Content>\n                                </List.Item>\n                            )}\n                            \n                        </List>\n                        <Label>\n                            Trending List\n                        </Label>\n                        <List divided relaxed style={{ maxHeight: 400, overflow: 'scroll' }}>\n                            { this.state.trending.map((value, index) =>\n                                <List.Item key={index}>\n                                    { this.state.currentSelected._id === value._id && <List.Icon name='angle double right' size='large' verticalAlign='middle' />}\n                                    <List.Content>\n                                        <List.Header onClick={ () => this.updateCurrent(value) } as='a'>{value.college}/{value.title}</List.Header>\n                                        <List.Description>{JSON.stringify(value.validity)}</List.Description>\n                                    </List.Content>\n                                    {/* <List.Icon name='delete' size='large' verticalAlign='middle' /> */}\n                                </List.Item>\n                            )}\n                            \n                        </List>\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column width={12}>\n                    <Segment>\n                    {\n                        this.state.error &&\n                        <Message>\n                            <Message.Header>Opps, there were a few problems</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    {\n                        this.state.success &&\n                        <Message>\n                            <Message.Header>Success Creating a new channel</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    {/* <Image style={{ display: 'block', margin: 'auto', width: 50 }} src={\"https://mycampusdock.com/\" + this.state.currentSelected.media} size='small' /> */}\n                    <Image style={{ borderRadius: 15, display: 'block', margin: 'auto', width: 333, maxHeight: 250, objectFit: 'contain' }} src={\"https://mycampusdock.com/\" + (this.state.currentSelected.media && this.state.currentSelected.media[0])} size='big' />\n                    <br></br>\n                    <Form>\n                        <Form.Group widths='equal'>\n                            <Form.Input disabled value={this.state.title} onChange={ (event, value) => this.setState({ name: value.value }) } fluid label='Channel Name' placeholder='Channel Name' />\n                        </Form.Group>\n                        \n                        <Form.TextArea disabled value={this.state.description} onChange={ (event, value) => this.setState({ description: value.value }) } label='Description' placeholder='What will this channel be about...' />\n                        <Label>\n                            Selected: {this.state.validity.getFullYear() + '-'+( (this.state.validity.getMonth() + 1) > 9 ? this.state.validity.getMonth() + 1 : '0' + (this.state.validity.getMonth() + 1)) + '-' + ( this.state.validity.getDate() > 9 ? this.state.validity.getDate() : '0' + this.state.validity.getDate())} Date is +1 due to midnight validity\n                        </Label>\n                        <input id=\"trending_date\" type=\"date\" max={ this.state.date.getFullYear() + '-'+( (this.state.date.getMonth() + 1) > 9 ? this.state.date.getMonth() + 1 : '0' + (this.state.date.getMonth() + 1)) + '-' + ( this.state.date.getDate() > 9 ? this.state.date.getDate() : '0' + this.state.date.getDate()) }\n                            min={ new Date().getFullYear() + '-'+( (new Date().getMonth() + 1) > 9 ? new Date().getMonth() + 1 : '0' + (new Date().getMonth() + 1)) + '-' + ( new Date().getDate() > 9 ? new Date().getDate() : '0' + new Date().getDate()) }\n                        >\n                        </input>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Form.Button loading={this.state.loading} disabled={this.state.currentSelected === {} } onClick={this.submitForm}>Submit</Form.Button>\n                        </div>\n                    </Form>\n                    </Segment>\n                </Grid.Column>\n            </Grid>\n            \n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return { \n      auth: state.auth\n    };\n};\n\n  \nexport default connect(mapStateToProps)(SetTrending);\n","import React from 'react';\nimport { Form, Grid, Dropdown, Segment, Label } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nconst stateOptions = [\n  { key: 'INVITE', value: 'INVITE', text: 'Invite' },\n  { key: 'MESSAGE', value: 'MESSAGE', text: 'Message' },\n];\n\nclass EmailActions extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind();\n    this.submitFormMessage = this.submitFormMessage.bind();\n  }\n\n  state = {\n    selected: '',\n    email: '',\n    name: '',\n    name1: '',\n    message: '',\n    name_1: '',\n    name_2: '',\n  }\n\n  submitForm = () => {\n    const formData = new FormData();\n    if(\n      this.state.email === '' ||\n      this.state.name === '' ||\n      this.state.name1 === ''\n      ) return;\n\n    formData.append('email', this.state.email);\n    formData.append('name', this.state.name);\n    formData.append('name1', this.state.name1);\n    this.setState({ loading: true });\n    axios.post(\"/admin/email-invite\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'x-access-token': this.props.auth.user_token\n      }\n    })\n    .then( (result) => {\n      result = result.data;\n      // console.log(result);\n      if(!result.error) {\n          alert('email sent successfully');\n          this.setState({ loading: false });\n      } else {\n          alert('email sending failed');\n          this.setState({ loading: false });\n      }\n    })\n    .catch( (err) => alert(JSON.stringify(err)) )\n    .finally( () => {\n      this.setState({ loading: false });\n    } )\n  }\n\n  submitFormMessage = () => {\n    const formData = new FormData();\n    if(\n      this.state.email === '' ||\n      this.state.message === ''\n      ) return;\n\n    formData.append('email', this.state.email);\n    formData.append('message', this.state.message);\n    formData.append('name_1', this.state.name_1);\n    formData.append('name_2', this.state.name_2);\n    \n    this.setState({ loading: true });\n\n    axios.post(\"/admin/email-message\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'x-access-token': this.props.auth.user_token\n      }\n    })\n    .then( (result) => {\n      result = result.data;\n      // console.log(result);\n      if(!result.error) {\n          alert('email sent successfully');\n          this.setState({ loading: false });\n      } else {\n          alert('email sending failed');\n          this.setState({ loading: false });\n      }\n    })\n    .catch( (err) => alert(JSON.stringify(err)) )\n    .finally( () => {\n      this.setState({ loading: false });\n    } )\n  }\n\n  \n    render() {\n        return(\n            <Grid stackable columns='equal'>\n                <Grid.Column\n                  style={{\n                    textAlign: 'center' }}\n                >\n                  <div style={{ padding: 10 }}>\n                    <Label>\n                        Select Email Type\n                    </Label>\n                  </div>\n                  <Dropdown\n                    placeholder='State'\n                    search\n                    selection\n                    onChange={(val, val1) => this.setState({ selected: val1.value })}\n                    options={stateOptions}\n                  />\n                </Grid.Column>\n                <Grid.Column width={12}>\n                    {\n                      this.state.selected === 'INVITE' &&\n                      <Segment>\n                        <h1>Invite a new Creator</h1>\n                        <Form>\n                          <Form.Group widths='equal'>\n                              <Form.Input value={this.state.email} onChange={ (event, value) => this.setState({ email: value.value }) } fluid label='Email Address' placeholder='Email Address' />\n                          </Form.Group>\n                          <Form.Group widths='equal'>\n                              <Form.Input value={this.state.name} onChange={ (event, value) => this.setState({ name: value.value }) } fluid label='Full Name' placeholder='Full Name' />\n                          </Form.Group>\n                          <Form.Group widths='equal'>\n                              <Form.Input value={this.state.name1} onChange={ (event, value) => this.setState({ name1: value.value }) } fluid label='Invitor Full Name' placeholder='Invitor Full Name' />\n                          </Form.Group>\n                          <Form.Button loading={this.state.loading} disabled={this.state.loading} onClick={this.submitForm}>Submit</Form.Button>\n                        </Form>\n                      </Segment>\n                    }\n                    {\n                      this.state.selected === 'MESSAGE' &&\n                      <Segment>\n                        <h1>Send a message to a Creator</h1>\n                        <Form>\n                          <Form.Group widths='equal'>\n                              <Form.Input value={this.state.email} onChange={ (event, value) => this.setState({ email: value.value }) } fluid label='Email Address' placeholder='Email Address' />\n                          </Form.Group>\n                          <Form.Group widths='equal'>\n                              <Form.Input value={this.state.name_1} onChange={ (event, value) => this.setState({ name_1: value.value }) } fluid label='Reciever Name' placeholder='Reciever Name' />\n                          </Form.Group>\n                          <Form.Group widths='equal'>\n                              <Form.Input value={this.state.name_2} onChange={ (event, value) => this.setState({ name_2: value.value }) } fluid label='Sender Name' placeholder='Sender Name' />\n                          </Form.Group>\n                          <Form.Group widths='equal'>\n                            <Form.TextArea value={this.state.message} onChange={ (event, value) => this.setState({ message: value.value }) } label='Message' placeholder='Message...' />\n                          </Form.Group>\n                          <Form.Button loading={this.state.loading} disabled={this.state.loading} onClick={this.submitFormMessage}>Submit</Form.Button>\n                        </Form>\n                      </Segment>\n                    }\n                </Grid.Column>\n            </Grid>\n            \n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return { \n      auth: state.auth\n    };\n};\n\n  \nexport default connect(mapStateToProps)(EmailActions);\n","import React, { Component } from 'react'\nimport { Button, Icon, Menu, Segment, Sidebar, Label, Image } from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport RequireAuth from '../components/require_auth';\nimport CreateChannel from './CreateChannel';\nimport ManageChannel from './ManageChannel';\nimport SetTrending from './SetTrending';\nimport EmailActions from './EmailActions';\n\nclass HomeAdmin extends Component {\n  state = { visible: false }\n\n  handleShowClick = () => this.setState({ visible: !this.state.visible })\n  handleSidebarHide = () => this.setState({ visible: false })\n\n  render() {\n    const { visible } = this.state\n    const { history } = this.props;\n    return (\n      <div style={{ flex: 1 }}>\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 10 }}>\n            <Button onClick={this.handleShowClick} icon>\n                <Icon name=\"sidebar\" />\n            </Button>\n            {/* <Button  onClick={this.handleShowClick} icon>\n                <Icon name=\"sidebar\" />\n            </Button> */}\n            <div style={{ flex: 1, marginTop: 10  }}>\n              <Image style={{ display: 'block', margin: 'auto', width: 50 }} src={require('../CampusStoryLogo.svg')} size='small' />\n            </div>     \n            <Button onClick={ () =>  this.props.logout()} animated>\n                <Button.Content visible>logout</Button.Content>\n                <Button.Content hidden>\n                <Icon name=\"close\" />\n                </Button.Content>\n            </Button>\n\n        </div>\n        \n\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            icon='labeled'\n            inverted\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={visible}\n            width='thin'\n          >\n            <Menu.Item as='a' onClick={() => history.push('/admin/create-channel')} >\n              <Icon name='plus square outline' />\n              Create Channel\n            </Menu.Item>\n            <Menu.Item as='b' onClick={() => history.push('/admin/manage-channel')} >\n              <Icon name='edit outline' />\n              Manage Channels\n            </Menu.Item>\n            <Menu.Item as='b' onClick={() => history.push('/admin/set-trending')} >\n              <Icon name='bell' />\n              Set Trending\n            </Menu.Item>\n            <Menu.Item as='b' onClick={() => history.push('/admin/email-actions')} >\n              <Icon name='mail' />\n              Email Actions\n            </Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher dimmed={visible}>\n            <Segment basic style={{minHeight: '100vh', display: 'flex', flexFlow: 'column nowrap'}}>\n                <Switch>\n                    <Route exact path=\"/admin/create-channel\" component={RequireAuth(CreateChannel)} />\n                    <Route exact path=\"/admin/manage-channel\" component={RequireAuth(ManageChannel)} />\n                    <Route exact path=\"/admin/set-trending\" component={RequireAuth(SetTrending)} />\n                    <Route exact path=\"/admin/email-actions\" component={RequireAuth(EmailActions)} />\n                </Switch>\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return { \n      auth: state.auth\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      logout: (payload) => {\n        dispatch({ type: 'UNAUTH_USER', payload });\n      }\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(HomeAdmin);","module.exports = __webpack_public_path__ + \"static/media/CampusStoryLogo.fea71e00.svg\";"],"sourceRoot":""}