{"version":3,"sources":["screens/CreateChannel.js","screens/ManageChannel.js","screens/HomeAdmin.js"],"names":["HomeAdmin","handleChange","e","_ref","value","_this","setState","state","categories","text","privateChannel","officialChannel","error","messages","name","category","description","creatorName","creatorEmail","creatorPassword","fileName","submitForm","file","document","getElementById","files","length","push","test","String","toLowerCase","undefined","formData","FormData","append","axios","post","headers","Content-Type","x-access-token","props","auth","user_token","then","result","data","console","log","loading","catch","err","finally","mounted","_this2","this","react_default","a","createElement","Grid","stackable","columns","Row","Column","Segment","Message","Header","List","map","index","Item","key","Form","Group","widths","Input","onChange","event","fluid","label","placeholder","TextArea","Checkbox","checked","Dropdown","options","id","type","Label","as","style","backgroundColor","marginBottom","htmlFor","Button","icon","basic","content","labelPosition","hidden","multiple","display","justifyContent","onClick","React","Component","connect","ManageChannel","divided","relaxed","Icon","size","verticalAlign","Content","Description","width","disabled","visible","handleShowClick","handleSidebarHide","history","flex","alignItems","padding","textAlign","logout","animated","Sidebar","Pushable","Menu","animation","inverted","onHide","vertical","Pusher","dimmed","minHeight","flexFlow","Switch","Route","exact","path","component","RequireAuth","CreateChannel","dispatch","payload"],"mappings":"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","file":"static/js/4.b070ecbd.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Grid, Label, Button, Message, Segment } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass HomeAdmin extends React.Component {\n    handleChange = (e, { value }) => this.setState({ value })\n    state = {\n        categories: [\n            { value: 'all', text: 'All' },\n            { value: 'articles', text: 'Articles' },\n            { value: 'products', text: 'Products' },\n        ],\n        privateChannel: false,\n        officialChannel: false,\n        error: false,\n        messages: [],\n        name: '',\n        category: '',\n        description: '',\n        creatorName: '',\n        creatorEmail: '',\n        creatorPassword: '',\n        fileName: ''\n    }\n\n    submitForm = () => {\n        let error = false;\n        let messages = [];\n        let file = document.getElementById('upload').files[0];\n        let creatorEmail = document.getElementById('creator-email');\n        let re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        \n        if(this.state.name.length < 3) {\n            error = true;\n            messages.push(\"The channel name is less than 3 characters\");\n        }\n        \n        if(this.state.name.length > 140) {\n            error = true;\n            messages.push(\"The channel name is more than 140 characters\");\n        }\n        \n        if(this.state.description.length < 10) {\n            error = true;\n            messages.push(\"The channel description is less than 10 characters\");\n        }\n        if(this.state.description.length > 140) {\n            error = true;\n            messages.push(\"The channel description is more than 140 characters\");\n        }\n        \n        if(this.state.category === '') {\n            error = true;\n            messages.push(\"No category selected\");\n        }\n\n        if(this.state.creatorName.length < 3) {\n            error = true;\n            messages.push(\"The creator name is less than 3 characters\");\n        }\n        \n        if(this.state.creatorName.length > 140) {\n            error = true;\n            messages.push(\"The creator name is more than 140 characters\");\n        }\n\n        if(this.state.creatorPassword.length < 3) {\n            error = true;\n            messages.push(\"The creator password is less than 3 characters\");\n        }\n        \n        if(this.state.creatorPassword.length > 140) {\n            error = true;\n            messages.push(\"The creator password is more than 140 characters\");\n        }\n        \n        \n        if(!re.test(String(creatorEmail.value).toLowerCase())) {\n            error = true;\n            messages.push(\"Invalid Email entry\");\n        }\n        \n        if(file === undefined) {\n            error = true;\n            messages.push(\"No file selected\");\n        }\n        \n        if(error === false) {\n            const formData = new FormData();\n            formData.append(\"name\", this.state.name);\n            formData.append(\"description\", this.state.description);\n            formData.append(\"private\", this.state.privateChannel);\n            formData.append(\"official\", this.state.officialChannel);\n            formData.append(\"category\", this.state.category);\n            formData.append(\"creatorName\", this.state.creatorName);\n            formData.append(\"creatorEmail\", this.state.creatorEmail);\n            formData.append(\"creatorPassword\", this.state.creatorPassword);\n            formData.append(\"poster\", file);\n            \n            axios.post(\"/admin/create-channel\", formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data',\n                  'x-access-token': this.props.auth.user_token\n                } \n              })\n              .then( (result) => {\n                result = result.data;\n                console.log(result);\n                if(!result.error) {\n                    this.setState({ loading: false, messages: [\"Channel successfully created\"], error: true });\n                } else {\n                    this.setState({ loading: false, messages: [\"Error creating the channel\"], error: true });\n                }\n              })\n              .catch( (err) => console.log(err) )\n              .finally( () => {\n                if(this.mounted)\n                    this.setState({ loading: false });\n              } )\n        } else {\n            this.setState({ messages, error })\n        }\n    }\n\n    render() {\n        return(\n            <Grid stackable columns={3}>\n                <Grid.Row>\n                <Grid.Column>\n                </Grid.Column>\n                <Grid.Column>\n                <Segment>\n                    {\n                        this.state.error &&\n                        <Message>\n                            <Message.Header>Opps, there were a few problems</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    <Form>\n                        <Form.Group widths='equal'>\n                            <Form.Input value={this.state.name} onChange={ (event, value) => this.setState({ name: value.value }) } fluid label='Channel Name' placeholder='Channel Name' />\n                        </Form.Group>\n                        \n                        <Form.TextArea value={this.state.description} onChange={ (event, value) => this.setState({ description: value.value }) } label='Description' placeholder='What will this channel be about...' />\n                        <Form.Checkbox label='Make this channel private?' checked={this.state.privateChannel} onChange={ (event, data) => this.setState({ privateChannel: !this.state.privateChannel }) }/>\n                        <Form.Checkbox label='Official Channel?' checked={this.state.officialChannel} onChange={ (event, data) => this.setState({ officialChannel: !this.state.officialChannel }) }/>\n                        <Form.Dropdown value={this.state.category} onChange={(event, value) => this.setState({ category: value.value }) } label='Category' options={this.state.categories} placeholder='Select a category'/>\n                        <Form.Group widths='equal'>\n                            <Form.Input value={this.state.creatorName} onChange={ (event, value) => this.setState({ creatorName: value.value }) } fluid label='Creator Name' placeholder='Creator Name' />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Input id=\"creator-email\" value={this.state.creatorEmail} type=\"email\" onChange={ (event, value) => this.setState({ creatorEmail: value.value }) } fluid label='Email' placeholder='Email' />\n                            <Form.Input value={this.state.creatorPassword} type=\"text\" onChange={ (event, value) => this.setState({ creatorPassword: value.value }) } fluid label='Password' placeholder='Password' />\n                        </Form.Group>\n\n                        <Label\n                            as=\"label\"\n                            // basic\n                            style={{ backgroundColor: '#fff', marginBottom: 10 }}\n                            htmlFor=\"upload\"\n                        >\n                            <Button\n                                icon=\"upload\"\n                                label={{\n                                    basic: true,\n                                    content: 'Select a banner for the channel'\n                                }}\n                                labelPosition=\"right\"\n                            />\n                            <p>{this.state.fileName}</p>\n                            <input\n                                hidden\n                                onChange={() => {\n                                    let file = document.getElementById('upload').files[0];\n                                    return this.setState({ fileName: file.name === undefined ? \"\" : file.name })\n                                }}\n                                id=\"upload\"\n                                multiple\n                                type=\"file\"\n                            />\n                        </Label>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Form.Button onClick={this.submitForm}>Submit</Form.Button>\n                        </div>\n                    </Form>\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            \n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { \n      auth: state.auth\n    };\n};\n\n  \nexport default connect(mapStateToProps)(HomeAdmin);\n","import React from 'react';\nimport {  Grid, List, Segment, Form, Message, Label, Button } from 'semantic-ui-react'\n\nclass ManageChannel extends React.Component {\n    state = {\n        name: '',\n        description: '',\n        creatorPassword: '',\n        fileName: ''\n    }\n\n    submitForm = () => {\n        let error = false;\n        let messages = [];\n        let file = document.getElementById('upload').files[0];\n        \n        if(this.state.name.length < 3) {\n            error = true;\n            messages.push(\"The channel name is less than 3 characters\");\n        }\n        \n        if(this.state.name.length > 140) {\n            error = true;\n            messages.push(\"The channel name is more than 140 characters\");\n        }\n        \n        if(this.state.description.length < 10) {\n            error = true;\n            messages.push(\"The channel description is less than 10 characters\");\n        }\n        if(this.state.description.length > 140) {\n            error = true;\n            messages.push(\"The channel description is more than 140 characters\");\n        }\n\n        if(this.state.creatorPassword.length < 3) {\n            error = true;\n            messages.push(\"The creator password is less than 3 characters\");\n        }\n        \n        if(this.state.creatorPassword.length > 140) {\n            error = true;\n            messages.push(\"The creator password is more than 140 characters\");\n        }\n        \n        \n        if(file === undefined) {\n            error = true;\n            messages.push(\"No file selected\");\n        }\n        \n        if(error === false) {\n            // handle in API\n        } else {\n            this.setState({ messages, error })\n        }\n    }\n\n    render() {\n        return(\n            <Grid stackable columns='equal'>\n                <Grid.Column>\n                    <Segment>\n                        <List divided relaxed>\n                            <List.Item>\n                                <List.Icon name='angle double right' size='large' verticalAlign='middle' />\n                                <List.Content>\n                                    <List.Header as='a'>College/Channel Name here</List.Header>\n                                    <List.Description>Category Here</List.Description>\n                                </List.Content>\n                            </List.Item>\n                        </List>\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column width={12}>\n                    <Segment>\n                    {\n                        this.state.error &&\n                        <Message>\n                            <Message.Header>Opps, there were a few problems</Message.Header>\n                            <Message.List>\n                                {\n                                    this.state.messages.map( (value, index) =>\n                                        <Message.Item key={index}> {value}</Message.Item>        \n                                    )\n                                }\n                                \n                            </Message.List>\n                        </Message>\n                    }\n                    <Form>\n                        <Form.Group widths='equal'>\n                            <Form.Input value={this.state.name} onChange={ (event, value) => this.setState({ name: value.value }) } fluid label='Channel Name' placeholder='Channel Name' />\n                        </Form.Group>\n                        \n                        <Form.TextArea value={this.state.description} onChange={ (event, value) => this.setState({ description: value.value }) } label='Description' placeholder='What will this channel be about...' />\n                        <Form.Checkbox disabled={true} value={\"\"} label='Make this channel private?' />\n                        <Form.Checkbox disabled={true} value={\"\"} label='Official Channel?' />\n                        <Form.Dropdown disabled={true} value={\"\"} placeholder='Select a category'/>\n                        <Form.Group widths='equal'>\n                            <Form.Input disabled={true} value={\"\"}  fluid label='Creator Name' placeholder='Creator Name' />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Input id=\"creator-email\" disabled={true} value={\"\"}  fluid label='Email' placeholder='Email' />\n                            <Form.Input value={this.state.creatorPassword} type=\"text\" onChange={ (event, value) => this.setState({ creatorPassword: value.value }) } fluid label='Password' placeholder='Password' />\n                        </Form.Group>\n\n                        <Label\n                            as=\"label\"\n                            // basic\n                            style={{ backgroundColor: '#fff', marginBottom: 10 }}\n                            htmlFor=\"upload\"\n                        >\n                            <Button\n                                icon=\"upload\"\n                                label={{\n                                    basic: true,\n                                    content: 'Select a banner for the channel'\n                                }}\n                                labelPosition=\"right\"\n                            />\n                            <p>{this.state.fileName}</p>\n                            <input\n                                hidden\n                                onChange={() => {\n                                    let file = document.getElementById('upload').files[0];\n                                    return this.setState({ fileName: file.name === undefined ? \"\" : file.name })\n                                }}\n                                id=\"upload\"\n                                multiple\n                                type=\"file\"\n                            />\n                        </Label>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Form.Button onClick={this.submitForm}>Submit</Form.Button>\n                        </div>\n                    </Form>\n                    </Segment>\n                </Grid.Column>\n            </Grid>\n            \n        );\n    }\n}\n\nexport default ManageChannel;","import React, { Component } from 'react'\nimport { Button, Icon, Menu, Segment, Sidebar, Label } from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport RequireAuth from '../components/require_auth';\nimport CreateChannel from './CreateChannel';\nimport ManageChannel from './ManageChannel';\n\nclass HomeAdmin extends Component {\n  state = { visible: false }\n\n  handleShowClick = () => this.setState({ visible: !this.state.visible })\n  handleSidebarHide = () => this.setState({ visible: false })\n\n  render() {\n    const { visible } = this.state\n    const { history } = this.props;\n    return (\n      <div style={{ flex: 1 }}>\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 10 }}>\n            <Button onClick={this.handleShowClick} icon>\n                <Icon name=\"sidebar\" />\n            </Button>\n            {/* <Button  onClick={this.handleShowClick} icon>\n                <Icon name=\"sidebar\" />\n            </Button> */}\n            <div style={{ flex: 1, textAlign: 'center', verticalAlign: 'middle' }}>\n\n            <Label > Campus Story Admin Panel \n            </Label>\n            \n            </div>\n            <Button onClick={ () =>  this.props.logout()} animated>\n                <Button.Content visible>logout</Button.Content>\n                <Button.Content hidden>\n                <Icon name=\"close\" />\n                </Button.Content>\n            </Button>\n\n        </div>\n        \n\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            icon='labeled'\n            inverted\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={visible}\n            width='thin'\n          >\n            <Menu.Item as='a' onClick={() => history.push('/admin/create-channel')} >\n              <Icon name='plus square outline' />\n              Create Channel\n            </Menu.Item>\n            <Menu.Item as='b' onClick={() => history.push('/admin/manage-channel')} >\n              <Icon name='edit outline' />\n              Manage Channels\n            </Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher dimmed={visible}>\n            <Segment basic style={{minHeight: '100vh', display: 'flex', flexFlow: 'column nowrap'}}>\n                <Switch>\n                    <Route exact path=\"/admin/create-channel\" component={RequireAuth(CreateChannel)} />\n                    <Route exact path=\"/admin/manage-channel\" component={RequireAuth(ManageChannel)} />\n                </Switch>\n            </Segment>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return { \n      auth: state.auth\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      logout: (payload) => {\n        dispatch({ type: 'UNAUTH_USER', payload });\n      }\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(HomeAdmin);"],"sourceRoot":""}